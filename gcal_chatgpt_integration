import datetime
import pickle
import os.path
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from googleapiclient.discovery import build

class GoogleCalendarPlugin:

    def __init__(self, credentials_path):
        self.credentials_path = credentials_path
        self.service = self.authenticate()

    def authenticate(self):
        creds = None
        if os.path.exists('token.pickle'):
            with open('token.pickle', 'rb') as token:
                creds = pickle.load(token)
        
        if not creds or not creds.valid:
            if creds and creds.expired and creds.refresh_token:
                creds.refresh(Request())
            else:
                flow = InstalledAppFlow.from_client_secrets_file(
                    self.credentials_path, ['https://www.googleapis.com/auth/calendar.readonly'])
                creds = flow.run_local_server(port=0)
                
                with open('token.pickle', 'wb') as token:
                    pickle.dump(creds, token)
        
        return build('calendar', 'v3', credentials=creds)

    def get_upcoming_events(self, num_events=10):
        now = datetime.datetime.utcnow().isoformat() + 'Z'
        events_result = self.service.events().list(calendarId='primary', timeMin=now,
                                                  maxResults=num_events, singleEvents=True,
                                                  orderBy='startTime').execute()
        return events_result.get('items', [])

if __name__ == "__main__":
    # Use the path to your credentials JSON file
    gcal = GoogleCalendarPlugin('path_to_credentials.json')
    events = gcal.get_upcoming_events()

    for event in events:
        start = event['start'].get('dateTime', event['start'].get('date'))
        print(start, event['summary'])
